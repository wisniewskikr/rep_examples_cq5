<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    
    <!-- ====================================================================== -->
    <!-- P A R E N T P R O J E C T D E S C R I P T I O N -->
    <!-- ====================================================================== -->
    <groupId>pl.kwi</groupId>
    <artifactId>Cq5-example-helloworld</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Cq5 Example Hello World</name>
    <description>Maven Multimodule project for Cq5 Example Hello World.</description>

    <prerequisites>
        <maven>3.0.2</maven>
    </prerequisites>


    <!-- ====================================================================== -->
    <!-- P R O P E R T I E S -->
    <!-- ====================================================================== -->
    <properties>        
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.filterSource>src/main/content/filter.xml</project.filterSource>
    </properties>
    
    
    <!-- ====================================================================== -->
    <!-- B U I L D -->
    <!-- ====================================================================== -->
     <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-scr-plugin</artifactId>
                    <version>1.7.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <version>2.3.7</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.7</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.14.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.9</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.sling</groupId>
                    <artifactId>maven-sling-plugin</artifactId>
                    <version>2.1.0</version>
                    <configuration>
                        <username>${crx.username}</username>
                        <password>${crx.password}</password>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.day.jcr.vault</groupId>
                    <artifactId>content-package-maven-plugin</artifactId>
                    <version>0.0.20</version>
                    <extensions>true</extensions>
                    <configuration>
                    	<group>${project.groupId}</group>
                    	<filterSource>${project.filterSource}</filterSource>
                    	<targetURL>http://${crx.host}:${crx.port}/crx/packmgr/service.jsp</targetURL>
                        <failOnError>true</failOnError>
                        <username>${crx.username}</username>
                        <password>${crx.password}</password>
                    </configuration>
                </plugin>
                <!--This plugin's configuration is used to store Eclipse
                    m2e settings only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.apache.felix
                                        </groupId>
                                        <artifactId>
                                            maven-scr-plugin
                                        </artifactId>
                                        <versionRange>
                                            [1.0.0,)
                                        </versionRange>
                                        <goals>
                                            <goal>scr</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore/>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    
    <!-- ====================================================================== -->
    <!-- P R O F I L E S -->
    <!-- ====================================================================== -->
    <profiles>
    
        <!-- Profile "bundle" - builds package with only
        java classes -->
        <profile>
            <id>bundle</id>
            <modules>
    			<module>Cq5-example-helloworld-bundle</module>
    		</modules>	
        </profile>
        
        <!-- Profile "app" - builds package with
        application. Includes bundle -->
        <profile>
            <id>app</id>
            <activation>
	      		<activeByDefault>true</activeByDefault>	
	      	</activation>
            <modules>
    			<module>Cq5-example-helloworld-bundle</module>
    			<module>Cq5-example-helloworld-app</module>
    		</modules>	
        </profile>
        
        <!-- Profile "content" - builds package with
        example content -->
        <profile>
            <id>content</id>
            <modules>
    			<module>Cq5-example-helloworld-content</module>
    		</modules>	
        </profile>
        
        <!-- Profile "full" - builds packages with
        application (includes bundle) and example content -->
        <profile>
            <id>full</id>
            <modules>
            	<module>Cq5-example-helloworld-bundle</module>
    			<module>Cq5-example-helloworld-app</module>
    			<module>Cq5-example-helloworld-content</module>
    		</modules>	
        </profile>
        
        <!-- Profile "localAuthor" - indicates Author CQ server
        on local machine -->
        <profile>
	      <id>localAuthor</id>
	      <activation>
	      	<activeByDefault>true</activeByDefault>	
	      </activation> 
	      <properties> 
	        <crx.host>localhost</crx.host>
	        <crx.port>4502</crx.port>
	        <crx.username>admin</crx.username>
        	<crx.password>admin</crx.password> 
	      </properties>
	    </profile>
	    
	    <!-- Profile "localPublish" - indicates Publish CQ server
        on local machine -->
	    <profile>
	      <id>localPublish</id> 
	      <properties> 
	        <crx.host>localhost</crx.host>
	        <crx.port>4503</crx.port> 
	        <crx.username>admin</crx.username>
        	<crx.password>admin</crx.password>
	      </properties>
	    </profile>
        
    </profiles>

    
    <!-- ====================================================================== -->
    <!-- D E P E N D E N C Y M A N A G E M E N T -->
    <!-- ====================================================================== -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.core</artifactId>
                <version>4.2.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.compendium</artifactId>
                <version>4.2.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.scr.annotations</artifactId>
                <version>1.6.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>biz.aQute</groupId>
                <artifactId>bndlib</artifactId>
                <version>1.43.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.5.10</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>2.5</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.jcr</groupId>
                <artifactId>jcr</artifactId>
                <version>2.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.sling</groupId>
                <artifactId>org.apache.sling.api</artifactId>
                <version>2.2.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.sling</groupId>
                <artifactId>org.apache.sling.jcr.api</artifactId>
                <version>2.1.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.8.1</version>
                <scope>test</scope>
            </dependency>           
            
            <!-- Dependencies with Sling Models -->
             <dependency>
	            <groupId>org.apache.sling</groupId>
	            <artifactId>org.apache.sling.models.api</artifactId>
	            <version>1.0.0</version>
	        </dependency>
	         <dependency>
	            <groupId>org.apache.sling</groupId>
	            <artifactId>org.apache.sling.models.impl</artifactId>
	            <version>1.0.0</version>
	        </dependency>
	        <dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.scripting.jsp.taglib</artifactId>
				<version>2.2.0</version>
			</dependency>
        </dependencies>
    </dependencyManagement>

    
    <!-- ====================================================================== -->
    <!-- R E P O S I T O R I E S -->
    <!-- ====================================================================== -->
    <!--
        Inclusion of repositories in POMs is controversial, to say the least.
        It would be best if you proxied the Adobe repository using a Maven
        Repository Manager. Once you do that, remove these sections.
     -->
    <repositories>
        <repository>
            <id>adobe</id>
            <name>Adobe Public Repository</name>
            <url>http://repo.adobe.com/nexus/content/groups/public/</url>
            <layout>default</layout>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>adobe</id>
            <name>Adobe Public Repository</name>
            <url>http://repo.adobe.com/nexus/content/groups/public/</url>
            <layout>default</layout>
        </pluginRepository>
    </pluginRepositories>

</project>